{"ast":null,"code":"// import\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, legacy_createStore as createStore } from 'redux'; // store = state + reducer\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) // 배포용: devtool 연결안함\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); // 개발용: devtoll 연결함\n\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","legacy_createStore","createStore","composeWithDevTools","thunkMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/store/configureStore.js"],"sourcesContent":["// import\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, legacy_createStore as createStore } from 'redux'; // store = state + reducer\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\n\nimport reducer from '../reducers';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  console.log(action);\n  return next(action);\n}\n\nconst configureStore = () => {\n  const middlewares = [, loggerMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares)) // 배포용: devtool 연결안함\n    : composeWithDevTools(applyMiddleware(...middlewares)) // 개발용: devtoll 연결함\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,kBAAkB,IAAIC,WAAzD,QAA4E,OAA5E,C,CAAqF;;AACrF,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,IAAaC,QAAb,QAAaA,QAAb;EAAA,OAA4B,UAACC,IAAD;IAAA,OAAU,UAACC,MAAD,EAAY;MACzEC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOD,IAAI,CAACC,MAAD,CAAX;IACD,CAHoD;EAAA,CAA5B;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAC3B,IAAMC,WAAW,GAAG,GAAGR,gBAAH,CAApB;EACA,IAAMS,QAAQ,GAAG,QACbf,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADM,CAC4B;EAD5B,EAEbX,mBAAmB,CAACJ,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAFvB,CAF2B,CAI8B;;EACzD,IAAME,KAAK,GAAGd,WAAW,CAACG,OAAD,EAAUU,QAAV,CAAzB;EACA,OAAOC,KAAP;AACD,CAPD;;AASA,IAAMC,OAAO,GAAGnB,aAAa,CAACe,cAAD,EAAiB;EAC5CK,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}