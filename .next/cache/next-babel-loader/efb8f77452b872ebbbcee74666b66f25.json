{"ast":null,"code":"var _jsxFileName = \"/Users/gimjimin/Desktop/github/twiffer/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); // optional chaining operator\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useCallback","useSelector","PropTypes","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","PostCard","post","liked","setLiked","useState","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\n\nimport PostImages from './PostImages';\n\nconst PostCard = ({ post }) => {\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev)\n  }, []);\n\n  const id = useSelector((state) => state.user.me?.id);  // optional chaining operator\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n            : <HeartOutlined key=\"heart\" />,  \n          <MessageOutlined key=\"comment\" />,\n          <Popover key=\"more\" content={(\n            <Button.Group>\n              {id && post.User.id === id\n                ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) \n                : <Button>신고</Button>}\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}  \n        />\n      </Card>\n      {/* <CommentForm /> */}\n      {/* <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}