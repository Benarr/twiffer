{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// state 생성 : 1) state를 바꾸고 싶을 때\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; // action : 2) 액션을 하나 만들어서 store에 store.dispatch\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction(data) {\n  return {\n    type: 'LOG_OUT',\n    data: data\n  };\n}; // reducer : 3) 이전상태와 액션을 통해서 다음 상태를 만들어내는 함수 / (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: action.data\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/reducers/index.js"],"sourcesContent":["// state 생성 : 1) state를 바꾸고 싶을 때\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  }\n};\n\n\n// action : 2) 액션을 하나 만들어서 store에 store.dispatch\nexport const loginAction = (data) => {\n  return {\n    type: 'LOG_IN',\n    data,\n  }\n}\n\nexport const logoutAction = (data) => {\n  return {\n    type: 'LOG_OUT',\n    data,\n  }\n}\n\n\n// reducer : 3) 이전상태와 액션을 통해서 다음 상태를 만들어내는 함수 / (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data,\n        }        \n      };\n    case 'LOG_OUT':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: action.data,\n        }\n      };\n  }\n};\n\nexport default rootReducer;"],"mappings":";;;;;;AAAA;AACA,IAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,UAAU,EAAE,KADR;IAEJD,IAAI,EAAE,IAFF;IAGJE,UAAU,EAAE,EAHR;IAIJC,SAAS,EAAE;EAJP,CADa;EAOnBC,IAAI,EAAE;IACJC,SAAS,EAAE;EADP;AAPa,CAArB,C,CAaA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;EACnC,OAAO;IACLC,IAAI,EAAE,QADD;IAELD,IAAI,EAAJA;EAFK,CAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,IAAD,EAAU;EACpC,OAAO;IACLC,IAAI,EAAE,SADD;IAELD,IAAI,EAAJA;EAFK,CAAP;AAID,CALM,C,CAQP;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBZ,YAAyB;EAAA,IAAXa,MAAW;;EACpD,QAAQA,MAAM,CAACJ,IAAf;IACE,KAAK,QAAL;MACE,uCACKG,KADL;QAEEX,IAAI,kCACCW,KAAK,CAACX,IADP;UAEFC,UAAU,EAAE,IAFV;UAGFD,IAAI,EAAEY,MAAM,CAACL;QAHX;MAFN;;IAQF,KAAK,SAAL;MACE,uCACKI,KADL;QAEEX,IAAI,kCACCW,KAAK,CAACX,IADP;UAEFC,UAAU,EAAE,KAFV;UAGFD,IAAI,EAAEY,MAAM,CAACL;QAHX;MAFN;EAXJ;AAoBD,CArBD;;AAuBA,eAAeG,WAAf"},"metadata":{},"sourceType":"module"}