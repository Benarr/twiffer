{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gimjimin/Desktop/github/twiffer/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"ZHUKYNhHVrba86LKfcPhorhtDn8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useCallback","useRef","Form","Input","Button","useDispatch","useSelector","addPost","PostForm","state","post","imagePaths","dispatch","imageInput","text","setText","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","map","v","display","width"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/components/PostForm.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addPost } from '../reducers/post';\n\n\nconst PostForm = () => {\n  const { imagePaths } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, setText] = useState('');\n\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n  }, []);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={v} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n}\n\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}