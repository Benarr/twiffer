{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// State (서버개발자와 Redux data 구조에 대한 협의 필요(UpperCase...))\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '나즈비'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        'nickname': 'sangari'\n      },\n      content: '얼른 사고싶어요~'\n    }, {\n      User: {\n        'nickname': 'bibi'\n      },\n      content: 'ㅋㅋㅋㅋㅋㅋㅋ'\n    }, {\n      User: {\n        'nickname': 'tangza'\n      },\n      content: '오요오요'\n    }, {\n      User: {\n        'nickname': '별이'\n      },\n      content: '멍멍'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n}; // 액션\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; // 동적 액션 크리에이터\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: 1,\n    content: data,\n    User: {\n      id: 1,\n      nickname: '나즈비'\n    },\n    Images: [],\n    Comments: []\n  };\n}; // Reducer\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: true,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","error"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/reducers/post.js"],"sourcesContent":["// State (서버개발자와 Redux data 구조에 대한 협의 필요(UpperCase...))\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '나즈비',\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        'nickname': 'sangari',\n      },\n      content: '얼른 사고싶어요~',\n    }, {\n      User: {\n        'nickname': 'bibi',\n      },\n      content: 'ㅋㅋㅋㅋㅋㅋㅋ',\n    }, {\n      User: {\n        'nickname': 'tangza',\n      },\n      content: '오요오요',\n    }, {\n      User: {\n        'nickname': '별이',\n      },\n      content: '멍멍',\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\n\n// 액션\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n\n// 동적 액션 크리에이터\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n\nconst dummyPost = (data) => ({\n  id: 1,\n  content: data,\n  User: {\n    id: 1,\n    nickname: '나즈비',\n  },\n  Images: [],\n  Comments: [],\n});\n\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null,\n      }\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: true,\n        addPostDone: true,\n      };\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addPostLoading: false,\n        addPostError: action.error\n      };\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null,\n      }\n    case ADD_COMMENT_SUCCESS:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentDone: true,\n      };\n    case ADD_COMMENT_FAILURE:\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentError: action.error\n      };  \n    default:\n      return state;\n  }\n};\n\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}