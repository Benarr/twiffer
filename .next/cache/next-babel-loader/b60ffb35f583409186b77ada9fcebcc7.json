{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { legacy_createStore as createStore } from 'redux'; // store = state + reducer\n\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore() {\n  var store = createStore(reducer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'sangari'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","legacy_createStore","createStore","reducer","configureStore","store","dispatch","type","data","wrapper","debug"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { legacy_createStore as createStore } from 'redux'; // store = state + reducer\n\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const store = createStore(reducer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'sangari',\n  })\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,kBAAkB,IAAIC,WAA/B,QAAkD,OAAlD,C,CAA2D;;AAE3D,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EAC3B,IAAMC,KAAK,GAAGH,WAAW,CAACC,OAAD,CAAzB;EACAE,KAAK,CAACC,QAAN,CAAe;IACbC,IAAI,EAAE,iBADO;IAEbC,IAAI,EAAE;EAFO,CAAf;EAIA,OAAOH,KAAP;AACD,CAPD;;AASA,IAAMI,OAAO,GAAGT,aAAa,CAACI,cAAD,EAAiB;EAC5CM,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}