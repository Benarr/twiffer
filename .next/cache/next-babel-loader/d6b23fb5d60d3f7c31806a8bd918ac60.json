{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// State (서버개발자와 Redux data 구조에 대한 협의 필요(UpperCase...))\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '나즈비'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        'nickname': 'sangari'\n      },\n      content: '얼른 사고싶어요~'\n    }, {\n      User: {\n        'nickname': 'bibi'\n      },\n      content: 'ㅋㅋㅋㅋㅋㅋㅋ'\n    }, {\n      User: {\n        'nickname': 'tangza'\n      },\n      content: '오요오요'\n    }, {\n      User: {\n        'nickname': '별이'\n      },\n      content: '멍멍'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false\n}; // Action\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nconst dummyPost = {\n  id: 2,\n  content: 'this is dummydata.',\n  User: {\n    id: 1,\n    nickname: '나즈비'\n  },\n  Images: [],\n  Comments: []\n}; // Reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    case ADD_POST_FAILURE:\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","data","type","dummyPost","reducer","state","action","postAdded"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/reducers/post.js"],"sourcesContent":["// State (서버개발자와 Redux data 구조에 대한 협의 필요(UpperCase...))\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '나즈비',\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        'nickname': 'sangari',\n      },\n      content: '얼른 사고싶어요~',\n    }, {\n      User: {\n        'nickname': 'bibi',\n      },\n      content: 'ㅋㅋㅋㅋㅋㅋㅋ',\n    }, {\n      User: {\n        'nickname': 'tangza',\n      },\n      content: '오요오요',\n    }, {\n      User: {\n        'nickname': '별이',\n      },\n      content: '멍멍',\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n}\n\n\n// Action\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nconst dummyPost = {\n  id: 2,\n  content: 'this is dummydata.',\n  User: {\n    id: 1,\n    nickname: '나즈비',\n  },\n  Images: [],\n  Comments: [],\n};\n\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    case ADD_POST_FAILURE:\n      \n    default:\n      return state;\n  }\n};\n\nexport default reducer;"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,SAAS,EAAE,CAAC;IACVC,EAAE,EAAE,CADM;IAEVC,IAAI,EAAE;MACJD,EAAE,EAAE,CADA;MAEJE,QAAQ,EAAE;IAFN,CAFI;IAMVC,OAAO,EAAE,uBANC;IAOVC,MAAM,EAAE,CAAC;MACPC,GAAG,EAAE;IADE,CAAD,EAEL;MACDA,GAAG,EAAE;IADJ,CAFK,EAIL;MACDA,GAAG,EAAE;IADJ,CAJK,CAPE;IAcVC,QAAQ,EAAE,CAAC;MACTL,IAAI,EAAE;QACJ,YAAY;MADR,CADG;MAITE,OAAO,EAAE;IAJA,CAAD,EAKP;MACDF,IAAI,EAAE;QACJ,YAAY;MADR,CADL;MAIDE,OAAO,EAAE;IAJR,CALO,EAUP;MACDF,IAAI,EAAE;QACJ,YAAY;MADR,CADL;MAIDE,OAAO,EAAE;IAJR,CAVO,EAeP;MACDF,IAAI,EAAE;QACJ,YAAY;MADR,CADL;MAIDE,OAAO,EAAE;IAJR,CAfO;EAdA,CAAD,CADe;EAqC1BI,UAAU,EAAE,EArCc;EAsC1BC,cAAc,EAAE;AAtCU,CAArB,C,CA0CP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;EAChCC,IAAI,EAAEL,gBAD0B;EAEhCI;AAFgC,CAAX,CAAhB;AAKP,MAAME,SAAS,GAAG;EAChBf,EAAE,EAAE,CADY;EAEhBG,OAAO,EAAE,oBAFO;EAGhBF,IAAI,EAAE;IACJD,EAAE,EAAE,CADA;IAEJE,QAAQ,EAAE;EAFN,CAHU;EAOhBE,MAAM,EAAE,EAPQ;EAQhBE,QAAQ,EAAE;AARM,CAAlB,C,CAYA;;AACA,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;EAChD,QAAQA,MAAM,CAACJ,IAAf;IACE,KAAKL,gBAAL;IAEA,KAAKC,gBAAL;MACE,uCACKO,KADL;QAEElB,SAAS,EAAE,CAACgB,SAAD,EAAY,GAAGE,KAAK,CAAClB,SAArB,CAFb;QAGEoB,SAAS,EAAE;MAHb;;IAKF,KAAKR,gBAAL;IAEA;MACE,OAAOM,KAAP;EAZJ;AAcD,CAfD;;AAiBA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}