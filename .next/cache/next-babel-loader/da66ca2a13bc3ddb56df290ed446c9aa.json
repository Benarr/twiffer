{"ast":null,"code":"var _jsxFileName = \"/Users/gimjimin/Desktop/github/twiffer/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport useInput from '../hooks/useinput';\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      cursor: 'pointer'\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"\\uC57C\\uC639\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Form","Input","Button","React","useCallback","useEffect","PropTypes","useSelector","useInput","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","addPostDone","setText","addCommentDone","onSubmitComment","console","log","dispatch","type","ADD_COMMENT_REQUEST","data","content","postId","userId","position","margin","right","bottom","cursor","propTypes","object","isRequired"],"sources":["/Users/gimjimin/Desktop/github/twiffer/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport useInput from '../hooks/useinput';\n\n\nconst CommentForm = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const [commentText, onChangeCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id},\n    });\n  }, [commentText, id]);\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40, cursor: 'pointer' }} type=\"primary\" htmlType=\"submit\">야옹</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;AAGA,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAChC,MAAMC,EAAE,GAAGJ,WAAW,CAAEK,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;EAAA,CAAD,CAAtB;EACA,MAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCR,QAAQ,CAAC,EAAD,CAAnD;EAEAH,SAAS,CAAC,MAAM;IACd,IAAIY,WAAJ,EAAiB;MACfC,OAAO,CAAC,EAAD,CAAP;IACD;EACF,CAJQ,EAIN,CAACC,cAAD,CAJM,CAAT;EAMA,MAAMC,eAAe,GAAGhB,WAAW,CAAC,MAAM;IACxCiB,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,EAAjB,EAAqBI,WAArB;IACAQ,QAAQ,CAAC;MACPC,IAAI,EAAEC,mBADC;MAEPC,IAAI,EAAE;QAAEC,OAAO,EAAEZ,WAAX;QAAwBa,MAAM,EAAElB,IAAI,CAACC,EAArC;QAAyCkB,MAAM,EAAElB;MAAjD;IAFC,CAAD,CAAR;EAID,CANkC,EAMhC,CAACI,WAAD,EAAcJ,EAAd,CANgC,CAAnC;EAOA,OACE,MAAC,IAAD;IAAM,QAAQ,EAAES,eAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAD,CAAM,IAAN;IAAW,KAAK,EAAE;MAAEU,QAAQ,EAAE,UAAZ;MAAwBC,MAAM,EAAE;IAAhC,CAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAD,CAAO,QAAP;IAAgB,KAAK,EAAEhB,WAAvB;IAAoC,QAAQ,EAAEC,mBAA9C;IAAmE,IAAI,EAAE,CAAzE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEE,MAAC,MAAD;IAAQ,KAAK,EAAE;MAAEc,QAAQ,EAAE,UAAZ;MAAwBE,KAAK,EAAE,CAA/B;MAAkCC,MAAM,EAAE,CAAC,EAA3C;MAA+CC,MAAM,EAAE;IAAvD,CAAf;IAAmF,IAAI,EAAC,SAAxF;IAAkG,QAAQ,EAAC,QAA3G;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFF,CADF,CADF;AAQD,CAzBD;;AA2BAzB,WAAW,CAAC0B,SAAZ,GAAwB;EACtBzB,IAAI,EAAEJ,SAAS,CAAC8B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe5B,WAAf"},"metadata":{},"sourceType":"module"}